package com.anye.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ascend.wangfeng.locationbyhand.bean.dbBean.ConnectRelation;
import com.ascend.wangfeng.locationbyhand.bean.dbBean.Log;
import com.ascend.wangfeng.locationbyhand.bean.dbBean.NoteDo;
import com.ascend.wangfeng.locationbyhand.bean.EventBean;

import com.anye.greendao.gen.ConnectRelationDao;
import com.anye.greendao.gen.LogDao;
import com.anye.greendao.gen.NoteDoDao;
import com.anye.greendao.gen.EventBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig connectRelationDaoConfig;
    private final DaoConfig logDaoConfig;
    private final DaoConfig noteDoDaoConfig;
    private final DaoConfig eventBeanDaoConfig;

    private final ConnectRelationDao connectRelationDao;
    private final LogDao logDao;
    private final NoteDoDao noteDoDao;
    private final EventBeanDao eventBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        connectRelationDaoConfig = daoConfigMap.get(ConnectRelationDao.class).clone();
        connectRelationDaoConfig.initIdentityScope(type);

        logDaoConfig = daoConfigMap.get(LogDao.class).clone();
        logDaoConfig.initIdentityScope(type);

        noteDoDaoConfig = daoConfigMap.get(NoteDoDao.class).clone();
        noteDoDaoConfig.initIdentityScope(type);

        eventBeanDaoConfig = daoConfigMap.get(EventBeanDao.class).clone();
        eventBeanDaoConfig.initIdentityScope(type);

        connectRelationDao = new ConnectRelationDao(connectRelationDaoConfig, this);
        logDao = new LogDao(logDaoConfig, this);
        noteDoDao = new NoteDoDao(noteDoDaoConfig, this);
        eventBeanDao = new EventBeanDao(eventBeanDaoConfig, this);

        registerDao(ConnectRelation.class, connectRelationDao);
        registerDao(Log.class, logDao);
        registerDao(NoteDo.class, noteDoDao);
        registerDao(EventBean.class, eventBeanDao);
    }
    
    public void clear() {
        connectRelationDaoConfig.getIdentityScope().clear();
        logDaoConfig.getIdentityScope().clear();
        noteDoDaoConfig.getIdentityScope().clear();
        eventBeanDaoConfig.getIdentityScope().clear();
    }

    public ConnectRelationDao getConnectRelationDao() {
        return connectRelationDao;
    }

    public LogDao getLogDao() {
        return logDao;
    }

    public NoteDoDao getNoteDoDao() {
        return noteDoDao;
    }

    public EventBeanDao getEventBeanDao() {
        return eventBeanDao;
    }

}
